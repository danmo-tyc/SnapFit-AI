name: ⚡ Quick Build APK

on:
  push:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  quick-build:
    runs-on: ubuntu-latest
    timeout-minutes: 20

    steps:
    - name: 📥 Checkout
      uses: actions/checkout@v4

    - name: 📦 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: ☕ Setup Java
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'

    - name: 📱 Setup Android SDK
      uses: android-actions/setup-android@v3

    - name: 🔧 Install dependencies
      run: npm ci --prefer-offline

    - name: 🔨 Build Next.js app
      run: npm run build

    - name: 📁 Create index.html
      run: |
        echo '<!DOCTYPE html><html><head><meta http-equiv="refresh" content="0; url=./zh/"><title>SnapFit AI</title></head><body><script>window.location.href="./zh/";</script></body></html>' > out/index.html

    - name: 🔄 Sync Capacitor
      run: npx cap sync android

    - name: 📱 Build APK
      run: |
        cd android
        chmod +x gradlew
        ./gradlew assembleDebug --no-daemon --max-workers=1 --parallel

    - name: 📤 Upload APK
      uses: actions/upload-artifact@v4
      with:
        name: SnapFit-AI-Debug-APK
        path: android/app/build/outputs/apk/debug/app-debug.apk
        retention-days: 30

    - name: 🎉 Build Summary
      run: |
        echo "✅ APK 构建成功！"
        echo "📥 请在 Actions 页面的 Artifacts 部分下载"
        echo "📱 APK 文件: app-debug.apk"
